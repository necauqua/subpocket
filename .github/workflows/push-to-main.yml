name: Push to main
on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup the secrets
        shell: bash
        env:
          KEYSTORE: ${{ secrets.KEYSTORE }}
          GRADLE_PROPERTIES: ${{ secrets.GRADLE_PROPERTIES }}
        run: |
          mkdir -p $HOME/.gradle
          echo "$KEYSTORE" | base64 -d > $HOME/.gradle/keystore.jks
          echo "$GRADLE_PROPERTIES" | base64 -d | sed "s:\$HOME:$HOME:g" > $HOME/.gradle/gradle.properties

      - name: Build
        run: ./gradlew build

      - name: Get version if tagged
        id: get-version
        run: |
          TAG=$(git describe --exact-match HEAD 2> /dev/null || true)
          if [ -n "$TAG" ]; then
            echo ::set-output name=VERSION::${TAG#v}
          fi

      - name: Push a git build to CurseForge
        if: "!steps.get-version.outputs.VERSION"
        run: ./gradlew curseforge

      - name: Get the last changelog
        if: steps.get-version.outputs.VERSION
        run: ./gradlew -q getLastChangelog > last-changelog.md

      - name: Make a GitHub Release
        if: steps.get-version.outputs.VERSION
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.get-version.outputs.VERSION }}
          artifacts: build/libs/subpocket-${{ steps.get-version.outputs.VERSION }}.jar
          bodyFile: last-changelog.md
          removeArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Push the build to Maven (GitHub and personal)
        if: steps.get-version.outputs.VERSION
        run: ./gradlew publish

      - name: Push the build to CurseForge
        if: steps.get-version.outputs.VERSION
        run: ./gradlew curseforge

  update-changelogs:
    name: Update changelogs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the main repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Checkout the wiki
        uses: actions/checkout@v2
        with:
          repository: ${{github.repository}}.wiki
          path: wiki

      - name: Generate a human changelog
        shell: bash
        run: ./gradlew -q generateChangelog --template .github/workflows/changelog-template.md > wiki/Changelog.md

      - name: Generate Forge updates.json
        shell: bash
        run: ./gradlew -q generateForgeUpdates --template .github/workflows/updates-template.json > wiki/updates.json

      - name: Push to wiki
        run: |
          cd wiki
          git config --local user.email action@github.com
          git config --local user.name 'Changelog Updater'
          git add .
          git diff --quiet && git diff --staged --quiet || git commit -m 'Update changelog'
          git push
